{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import _objectSpread from\"/Users/laurenjanicke/aes-sustainability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import Autocomplete from'@material-ui/lab/Autocomplete';import Hidden from'@material-ui/core/Hidden';import IconButton from'@material-ui/core/IconButton';import MenuIcon from'@material-ui/icons/Menu';import TextField from'@material-ui/core/TextField';import{makeStyles}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){return{root:{display:'flex',flexDirection:'row',backgroundColor:'#fff',border:'1px solid #ccc',borderRadius:5,width:364,position:'relative',height:44},menuButton:{margin:0,padding:7},autocomplete:{margin:2,flexGrow:1},searchInput:{height:40,margin:0}};});export default function Omnibox(props){var classes=useStyles();var companies=(props.companies||[]).map(function(f){return f.properties;});var companyNames=companies.map(function(c){return c.company;});function handleResultSelection(event,value){if(value&&companyNames.includes(value.company)){props.onSelectCompany(value);}}return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(Hidden,{lgUp:true,implementation:\"css\",children:/*#__PURE__*/_jsx(IconButton,{edge:\"start\",color:\"inherit\",\"aria-label\":\"menu\",className:classes.menuButton,onClick:props.onOpenMobileDrawer,children:/*#__PURE__*/_jsx(MenuIcon,{style:{fontSize:'1.8rem'}})})}),/*#__PURE__*/_jsx(Autocomplete,{freeSolo:true,selectOnFocus:true,handleHomeEndKeys:true,onChange:handleResultSelection,options:companies,getOptionLabel:function getOptionLabel(prop){return prop.company;},className:classes.autocomplete,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{placeholder:\"Search...\",className:classes.searchInput,margin:\"dense\",variant:\"outlined\"}));}})]});}","map":{"version":3,"sources":["/Users/laurenjanicke/aes-sustainability/src/Omnibox.js"],"names":["React","Autocomplete","Hidden","IconButton","MenuIcon","TextField","makeStyles","useStyles","theme","root","display","flexDirection","backgroundColor","border","borderRadius","width","position","height","menuButton","margin","padding","autocomplete","flexGrow","searchInput","Omnibox","props","classes","companies","map","f","properties","companyNames","c","company","handleResultSelection","event","value","includes","onSelectCompany","onOpenMobileDrawer","fontSize","prop","params"],"mappings":"qPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAGD,UAAU,CAAC,SAACE,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CAEJC,aAAa,CAAE,KAFX,CAGJC,eAAe,CAAE,MAHb,CAIJC,MAAM,CAAE,gBAJJ,CAKJC,YAAY,CAAE,CALV,CAMJC,KAAK,CAAE,GANH,CAOJC,QAAQ,CAAE,UAPN,CAQJC,MAAM,CAAE,EARJ,CADiC,CAWvCC,UAAU,CAAE,CACVC,MAAM,CAAE,CADE,CAEVC,OAAO,CAAE,CAFC,CAX2B,CAevCC,YAAY,CAAE,CACZF,MAAM,CAAE,CADI,CAEZG,QAAQ,CAAE,CAFE,CAfyB,CAmBvCC,WAAW,CAAE,CACXN,MAAM,CAAE,EADG,CAEXE,MAAM,CAAE,CAFG,CAnB0B,CAAZ,EAAD,CAA5B,CA0BA,cAAe,SAASK,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACrC,GAAMC,CAAAA,OAAO,CAAGnB,SAAS,EAAzB,CAEA,GAAIoB,CAAAA,SAAS,CAAG,CAACF,KAAK,CAACE,SAAN,EAAmB,EAApB,EAAwBC,GAAxB,CAA4B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,UAAN,EAA7B,CAAhB,CACA,GAAIC,CAAAA,YAAY,CAAGJ,SAAS,CAACC,GAAV,CAAc,SAAAI,CAAC,QAAIA,CAAAA,CAAC,CAACC,OAAN,EAAf,CAAnB,CAEA,QAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsCC,KAAtC,CAA6C,CAC3C,GAAIA,KAAK,EAAIL,YAAY,CAACM,QAAb,CAAsBD,KAAK,CAACH,OAA5B,CAAb,CAAmD,CACjDR,KAAK,CAACa,eAAN,CAAsBF,KAAtB,EACD,CACF,CAED,mBACE,aAAK,SAAS,CAAEV,OAAO,CAACjB,IAAxB,wBACE,KAAC,MAAD,EAAQ,IAAI,KAAZ,CAAa,cAAc,CAAC,KAA5B,uBACE,KAAC,UAAD,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,SAFR,CAGE,aAAW,MAHb,CAIE,SAAS,CAAEiB,OAAO,CAACR,UAJrB,CAKE,OAAO,CAAEO,KAAK,CAACc,kBALjB,uBAME,KAAC,QAAD,EAAU,KAAK,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAjB,EANF,EADF,EADF,cAWE,KAAC,YAAD,EACE,QAAQ,KADV,CAEE,aAAa,KAFf,CAGE,iBAAiB,KAHnB,CAIE,QAAQ,CAAEN,qBAJZ,CAKE,OAAO,CAAEP,SALX,CAME,cAAc,CAAE,wBAAAc,IAAI,QAAIA,CAAAA,IAAI,CAACR,OAAT,EANtB,CAOE,SAAS,CAAEP,OAAO,CAACL,YAPrB,CAQE,WAAW,CAAE,qBAACqB,MAAD,qBACX,KAAC,SAAD,gCAAeA,MAAf,MACE,WAAW,CAAC,WADd,CAEE,SAAS,CAAEhB,OAAO,CAACH,WAFrB,CAGE,MAAM,CAAC,OAHT,CAIE,OAAO,CAAC,UAJV,GADW,EARf,EAXF,GADF,CA6BD","sourcesContent":["import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n    borderRadius: 5,\n    width: 364,\n    position: 'relative',\n    height: 44,\n  },\n  menuButton: {\n    margin: 0,\n    padding: 7,\n  },\n  autocomplete: {\n    margin: 2,\n    flexGrow: 1,\n  },\n  searchInput: {\n    height: 40,\n    margin: 0,\n  },\n}));\n\n\nexport default function Omnibox(props) {\n  const classes = useStyles();\n\n  let companies = (props.companies || []).map(f => f.properties);\n  let companyNames = companies.map(c => c.company);\n\n  function handleResultSelection(event, value) {\n    if (value && companyNames.includes(value.company)) {\n      props.onSelectCompany(value);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Hidden lgUp implementation=\"css\">\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          className={classes.menuButton}\n          onClick={props.onOpenMobileDrawer}>\n          <MenuIcon style={{fontSize: '1.8rem'}} />\n        </IconButton>\n      </Hidden>\n      <Autocomplete\n        freeSolo\n        selectOnFocus\n        handleHomeEndKeys\n        onChange={handleResultSelection}\n        options={companies}\n        getOptionLabel={prop => prop.company}\n        className={classes.autocomplete}\n        renderInput={(params) => (\n          <TextField {...params}\n            placeholder=\"Search...\"\n            className={classes.searchInput}\n            margin=\"dense\"\n            variant=\"outlined\" />\n        )}\n      />\n    </div>);\n}\n"]},"metadata":{},"sourceType":"module"}