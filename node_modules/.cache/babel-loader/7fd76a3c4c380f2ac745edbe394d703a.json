{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laurenjanicke/aes-sustainability/src/Omnibox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n    borderRadius: 5,\n    width: 364,\n    position: 'relative',\n    height: 44\n  },\n  menuButton: {\n    margin: 0,\n    padding: 7\n  },\n  autocomplete: {\n    margin: 2,\n    flexGrow: 1\n  },\n  searchInput: {\n    height: 40,\n    margin: 0\n  }\n}));\nexport default function Omnibox(props) {\n  _s();\n\n  const classes = useStyles();\n  let companies = (props.companies || []).map(f => f.properties);\n  let companyNames = companies.map(c => c.company);\n\n  function handleResultSelection(event, value) {\n    if (value && companyNames.includes(value.company)) {\n      props.onSelectCompany(value);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      lgUp: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"start\",\n        color: \"inherit\",\n        \"aria-label\": \"menu\",\n        className: classes.menuButton,\n        onClick: props.onOpenMobileDrawer,\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n          style: {\n            fontSize: '1.8rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      freeSolo: true,\n      selectOnFocus: true,\n      handleHomeEndKeys: true,\n      onChange: handleResultSelection,\n      options: companies,\n      getOptionLabel: prop => prop.company,\n      className: classes.autocomplete,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        placeholder: \"Search...\",\n        className: classes.searchInput,\n        margin: \"dense\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Omnibox, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Omnibox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Omnibox\");","map":{"version":3,"sources":["/Users/laurenjanicke/aes-sustainability/src/Omnibox.js"],"names":["React","Autocomplete","Hidden","IconButton","MenuIcon","TextField","makeStyles","useStyles","theme","root","display","flexDirection","backgroundColor","border","borderRadius","width","position","height","menuButton","margin","padding","autocomplete","flexGrow","searchInput","Omnibox","props","classes","companies","map","f","properties","companyNames","c","company","handleResultSelection","event","value","includes","onSelectCompany","onOpenMobileDrawer","fontSize","prop","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n    borderRadius: 5,\n    width: 364,\n    position: 'relative',\n    height: 44,\n  },\n  menuButton: {\n    margin: 0,\n    padding: 7,\n  },\n  autocomplete: {\n    margin: 2,\n    flexGrow: 1,\n  },\n  searchInput: {\n    height: 40,\n    margin: 0,\n  },\n}));\n\n\nexport default function Omnibox(props) {\n  const classes = useStyles();\n\n  let companies = (props.companies || []).map(f => f.properties);\n  let companyNames = companies.map(c => c.company);\n\n  function handleResultSelection(event, value) {\n    if (value && companyNames.includes(value.company)) {\n      props.onSelectCompany(value);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Hidden lgUp implementation=\"css\">\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          className={classes.menuButton}\n          onClick={props.onOpenMobileDrawer}>\n          <MenuIcon style={{fontSize: '1.8rem'}} />\n        </IconButton>\n      </Hidden>\n      <Autocomplete\n        freeSolo\n        selectOnFocus\n        handleHomeEndKeys\n        onChange={handleResultSelection}\n        options={companies}\n        getOptionLabel={prop => prop.company}\n        className={classes.autocomplete}\n        renderInput={(params) => (\n          <TextField {...params}\n            placeholder=\"Search...\"\n            className={classes.searchInput}\n            margin=\"dense\"\n            variant=\"outlined\" />\n        )}\n      />\n    </div>);\n}\n"]},"metadata":{},"sourceType":"module"}