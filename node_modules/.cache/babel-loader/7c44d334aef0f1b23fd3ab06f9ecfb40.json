{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laurenjanicke/aes-sustainability/src/SettingsPane.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport LocationSelector from './LocationSelector';\nimport { normalizeCategory } from './common';\nconst drawerWidth = 320;\nconst useStyles = makeStyles(theme => ({\n  settingsPane: {\n    background: 'rgba(244, 244, 244, 0.93)',\n    'max-width': drawerWidth\n  },\n  drawer: {\n    [theme.breakpoints.up('lg')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    border: 0\n  },\n  settingsPaneHeader: {\n    backgroundColor: '#02346d',\n    color: '#ffffff',\n    border: 0,\n    textAlign: 'center',\n    padding: 8\n  },\n  settingsPaneContent: {\n    padding: 4\n  },\n  settingsPaneSubheader: {\n    padding: 6\n  },\n  formControlLabel: {\n    padding: 1,\n    marginLeft: -4\n  },\n  categoryCheckbox: {\n    padding: 2\n  },\n  categoryLabel: {\n    display: 'flex',\n    flexDirection: 'row',\n    verticalAlign: 'middle',\n    fontFamily: 'Open Sans',\n    fontSize: '10pt'\n  },\n  categoryLegend: {\n    content: '',\n    width: 15,\n    height: 15,\n    margin: 4,\n    padding: 0,\n    borderRadius: 3\n  },\n  formControl: {\n    margin: theme.spacing(0.1)\n  },\n  paneCloseButton: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    padding: 7\n  }\n}));\nexport default function SettingsPane(props) {\n  _s();\n\n  const classes = useStyles();\n\n  const closeSettingsPane = () => props.onToggleOpen(false);\n\n  const formControlLabels = props.taxonomy.map((category, idx) => {\n    const sanitizedCat = normalizeCategory(category.name);\n    const isChecked = props.selectedCategories.has(sanitizedCat);\n    return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formControlLabel,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        className: classes.categoryCheckbox,\n        checked: isChecked,\n        onChange: props.onToggleCategory,\n        name: sanitizedCat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.categoryLabel,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.categoryLegend,\n          style: {\n            background: category.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), category.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  });\n\n  const drawer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.settingsPane,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.settingsPaneHeader,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: \"Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        lgUp: true,\n        implementation: \"css\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"close-menu\",\n          className: classes.paneCloseButton,\n          onClick: closeSettingsPane,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.settingsPaneContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.settingsPaneSubheader,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Select the point color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationSelector, {\n        onSelectMap: props.onSelectMap,\n        selectedMapId: props.selectedMapId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          margin: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.settingsPaneSubheader,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Filter by category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          color: \"primary\",\n          variant: \"contained\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"select-all\",\n            onClick: props.onSelectAllCategories,\n            children: \"Select all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"select-none\",\n            onClick: props.onDeselectAllCategories,\n            children: \"Clear all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: formControlLabels\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.drawer,\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      lgUp: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"temporary\",\n        open: props.mobileDrawerOpen,\n        onClose: closeSettingsPane,\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n\n        },\n        children: drawer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      mdDown: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        classes: {\n          paper: classes.drawerPaper\n        },\n        variant: \"permanent\",\n        open: true,\n        onClose: closeSettingsPane,\n        children: drawer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SettingsPane, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SettingsPane;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsPane\");","map":{"version":3,"sources":["/Users/laurenjanicke/aes-sustainability/src/SettingsPane.js"],"names":["React","makeStyles","Button","ButtonGroup","Checkbox","CloseIcon","Divider","Drawer","FormControl","FormGroup","FormControlLabel","Hidden","IconButton","Typography","LocationSelector","normalizeCategory","drawerWidth","useStyles","theme","settingsPane","background","drawer","breakpoints","up","width","flexShrink","drawerPaper","border","settingsPaneHeader","backgroundColor","color","textAlign","padding","settingsPaneContent","settingsPaneSubheader","formControlLabel","marginLeft","categoryCheckbox","categoryLabel","display","flexDirection","verticalAlign","fontFamily","fontSize","categoryLegend","content","height","margin","borderRadius","formControl","spacing","paneCloseButton","position","top","right","SettingsPane","props","classes","closeSettingsPane","onToggleOpen","formControlLabels","taxonomy","map","category","idx","sanitizedCat","name","isChecked","selectedCategories","has","onToggleCategory","onSelectMap","selectedMapId","onSelectAllCategories","onDeselectAllCategories","mobileDrawerOpen","keepMounted","paper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport LocationSelector from './LocationSelector';\nimport { normalizeCategory } from './common';\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles((theme) => ({\n  settingsPane: {\n    background: 'rgba(244, 244, 244, 0.93)',\n    'max-width': drawerWidth,\n  },\n  drawer: {\n    [theme.breakpoints.up('lg')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    border: 0,\n  },\n  settingsPaneHeader: {\n    backgroundColor: '#02346d',\n    color: '#ffffff',\n    border: 0,\n    textAlign: 'center',\n    padding: 8,\n  },\n  settingsPaneContent: {\n    padding: 4,\n  },\n  settingsPaneSubheader: {\n    padding: 6,\n  },\n  formControlLabel: {\n    padding: 1,\n    marginLeft: -4,\n  },\n  categoryCheckbox: {\n    padding: 2,\n  },\n  categoryLabel: {\n    display: 'flex',\n    flexDirection: 'row',\n    verticalAlign: 'middle',\n    fontFamily: 'Open Sans',\n    fontSize: '10pt',\n  },\n  categoryLegend: {\n    content: '',\n    width: 15,\n    height: 15,\n    margin: 4,\n    padding: 0,\n    borderRadius: 3,\n  },\n  formControl: {\n    margin: theme.spacing(0.1),\n  },\n  paneCloseButton: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    padding: 7,\n  },\n}));\n\nexport default function SettingsPane(props) {\n  const classes = useStyles();\n\n  const closeSettingsPane = () => props.onToggleOpen(false);\n\n  const formControlLabels = props.taxonomy.map((category, idx) => {\n    const sanitizedCat = normalizeCategory(category.name);\n    const isChecked = props.selectedCategories.has(sanitizedCat);\n\n    return (\n      <FormControlLabel\n        key={idx}\n        className={classes.formControlLabel}\n        control={\n          <Checkbox\n            className={classes.categoryCheckbox}\n            checked={isChecked}\n            onChange={props.onToggleCategory}\n            name={sanitizedCat} />}\n        label={\n          <div className={classes.categoryLabel}>\n            <span\n              className={classes.categoryLegend}\n              style={{background: category.color}} />\n          {category.name}\n          </div>}\n      />);\n  });\n\n\n\n  const drawer = (\n    <div className={classes.settingsPane}>\n      <div className={classes.settingsPaneHeader}>\n        <Typography variant=\"h2\">Options</Typography>\n        <Hidden lgUp implementation=\"css\">\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"close-menu\"\n            className={classes.paneCloseButton}\n            onClick={closeSettingsPane}>\n            <CloseIcon />\n          </IconButton>\n        </Hidden>\n      </div>\n      <div className={classes.settingsPaneContent}>\n        <div className={classes.settingsPaneSubheader}>\n          <Typography variant=\"h3\">Select the point color</Typography>\n        </div>\n        <LocationSelector\n          onSelectMap={props.onSelectMap}\n          selectedMapId={props.selectedMapId} />\n        <Divider style={{margin: 4}} />\n        <div className={classes.settingsPaneSubheader}>\n          <Typography variant=\"h3\">Filter by category</Typography>\n        </div>\n        <div>\n          <ButtonGroup color=\"primary\" variant=\"contained\">\n            <Button\n              id=\"select-all\"\n              onClick={props.onSelectAllCategories}>Select all</Button>\n            <Button\n              id=\"select-none\"\n              onClick={props.onDeselectAllCategories}>Clear all</Button>\n          </ButtonGroup>\n        </div>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormGroup>{formControlLabels}</FormGroup>\n        </FormControl>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={classes.drawer}>\n      <Hidden lgUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          open={props.mobileDrawerOpen}\n          onClose={closeSettingsPane}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}>\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n          onClose={closeSettingsPane}>\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}