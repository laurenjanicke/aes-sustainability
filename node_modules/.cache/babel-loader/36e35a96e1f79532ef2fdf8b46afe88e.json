{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/laurenjanicke/aes-sustainability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import mapboxgl from'mapbox-gl';import React,{useState,useEffect}from'react';import{ThemeProvider}from'@material-ui/core/styles';import Hidden from'@material-ui/core/Hidden';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';import LogoOverlay from'./LogoOverlay';import IconButton from'@material-ui/core/Button';import{Home}from'@material-ui/icons';import Omnibox from'./Omnibox';import{getAllCategories}from'./common';import CONFIG from'./config.json';import{fetchMapData}from'./data-loader';import{THEME}from'./Theme';import insightLogo from'./img/insight-white.png';import'./App.css';var COMPANIES_SOURCE='companies';var MAPS=CONFIG['maps'];var POINT_LAYER='energy-companies-point-layer';// testing if desktop change is key to pages rebuilding\n// = process.env.REACT_APP_MAPBOX_API_TOKEN;\n// mapboxgl.accessToken\nmapboxgl.accessToken='pk.eyJ1IjoidG90b3JvLWRha2UiLCJhIjoiY2tiNzJuZmQ3MDFudDJxa2N1ZG91YzBzciJ9.5qJpYzti2W7avnuM9rCiKA';function getPopupContent(props){var categoryInfo=['tax1','tax2','tax3'].map(function(k){return props[k];}).filter(function(s){return s;}).join(\" | \");return\"\\n    <div class=\\\"popup\\\" style = \\\"color: 626262\\\">\\n      <h3 class=\\\"company-name\\\">\\n        <a href=\".concat(props['website'],\" style=\\\"color: 02346d\\\" target=\\\"blank\\\">\").concat(props['company'],\"</a>\\n      </h3>\\n      \\n      City: <span class=\\\"city-info\\\">\").concat(props['city'],\"</span><br />\\n\\n    </div>\");}function clearPopups(){var popUps=document.getElementsByClassName('mapboxgl-popup');// Check if there is already a popup on the map and if so, remove it\n// This prevents multiple popups in the case of overlapping circles\nif(popUps[0])popUps[0].remove();}function displayPopup(map,feature){var coordinates=feature.geometry.coordinates.slice();clearPopups();new mapboxgl.Popup({}).setLngLat(coordinates).setHTML(getPopupContent(feature.properties)).setMaxWidth(\"600px\").addTo(map);}function populateMapData(map,mapId,mapData){map.setCenter(MAPS[mapId].center);map.setZoom(1);mapData.then(function(data){map.addSource(COMPANIES_SOURCE,{type:'geojson',data:data['geojson']});map.addLayer({id:POINT_LAYER,type:'circle',source:COMPANIES_SOURCE,paint:{// make circles larger as the user zooms\n'circle-radius':{stops:[[7,5],[14,12],[20,50]]},'circle-opacity':0.85,// color circles by primary category\n'circle-color':'#79DDF2','circle-stroke-color':'#000','circle-stroke-width':0.4}});map.on('mouseenter',POINT_LAYER,function(e){map.getCanvas().style.cursor='pointer';});map.on('mouseleave',POINT_LAYER,function(){map.getCanvas().style.cursor='';});map.on('click',POINT_LAYER,function(e){return displayPopup(map,e.features[0]);});map.flyTo({center:MAPS[mapId].flyTo,zoom:MAPS[mapId].flyToZoom||8,speed:0.5});});}var getUrlFragment=function getUrlFragment(){return window.location.hash.replace('#','');};function useUrlFragment(fragment,callback){useEffect(function(){window.location.hash='#'+fragment;var handleHashChange=function handleHashChange(){callback(getUrlFragment());};window.addEventListener('hashchange',handleHashChange);return function(){window.removeEventListener('hashchange',handleHashChange);};});}function getInitialMapId(){var initialMapId=getUrlFragment();if(MAPS.hasOwnProperty(initialMapId)){return initialMapId;}return CONFIG['defaultMapId'];}var useStyles=makeStyles(function(theme){return{root:{display:'flex',flexDirection:'row'},mainContent:{flexGrow:1,position:'relative'},mapContainer:{height:'100vh',top:0,right:0,left:0,bottom:0,backgroundColor:'#333'},mapOverlay:{position:'absolute',top:0,left:0,right:0,bottom:0,padding:0,pointerEvents:'none'},mapOverlayInner:{display:'block',position:'relative',height:'100%',width:'100%',margin:0,padding:0},mainControlOverlay:{position:'absolute',top:0,left:0,padding:0,margin:0,pointerEvents:'auto',display:'flex',flexDirection:'row'},insightLogoContainer:{padding:8},titleAndSearch:{padding:'4px 8px'},mapTitle:{color:'#fff',padding:'4px 0px',marginBottom:4},resetViewButton:{position:'absolute',bottom:73,right:4.5,minWidth:30,maxWidth:30,height:31}};});export default function App(){var classes=useStyles();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),thisMap=_useState2[0],setThisMap=_useState2[1];var _useState3=useState(getInitialMapId()),_useState4=_slicedToArray(_useState3,2),selectedMapId=_useState4[0],setSelectedMapId=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),taxonomy=_useState6[0],setTaxonomy=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),companiesGeojson=_useState8[0],setCompaniesGeojson=_useState8[1];var _useState9=useState(new Set([])),_useState10=_slicedToArray(_useState9,2),selectedCategories=_useState10[0],setSelectedCategories=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),mobileDrawerOpen=_useState12[0],setMobileDrawerOpen=_useState12[1];function handleSelectAllCategories(txnomy){// takes argument instead of using taxonomy directly because taxonomy\n// state update can lag behind\nsetSelectedCategories(getAllCategories(txnomy));}function handleSelectCompany(e){var selectedCompany=companiesGeojson.features[e.idx];displayPopup(thisMap,selectedCompany);thisMap.flyTo({center:selectedCompany.geometry.coordinates,zoom:14});}function handleSelectMap(mapId){if(mapId!==selectedMapId){clearPopups();thisMap.removeLayer(POINT_LAYER);thisMap.removeSource(COMPANIES_SOURCE);setSelectedMapId(mapId);setMobileDrawerOpen(false);var mapData=fetchMapData(mapId);mapData.then(setUpMap);populateMapData(thisMap,mapId,mapData);handleSelectAllCategories(taxonomy);}}function handleReset(){// called when reset button is clicked\nthisMap.flyTo({center:MAPS[selectedMapId].flyTo,zoom:MAPS[selectedMapId].flyToZoom||8});}function setUpMap(data){setTaxonomy(data['taxonomy']);setCompaniesGeojson(data['geojson']);// initially select all categories\nhandleSelectAllCategories(data['taxonomy']);}function initMap(){var map=new mapboxgl.Map({container:\"map-container\",style:'mapbox://styles/mapbox/dark-v10',attributionControl:false,center:MAPS[selectedMapId].center,zoom:1,minZoom:1});var mapData=fetchMapData(selectedMapId);mapData.then(setUpMap);map.on('load',function(){map.addControl(new mapboxgl.FullscreenControl(),'bottom-right');map.addControl(new mapboxgl.NavigationControl(),'bottom-right');populateMapData(map,selectedMapId,mapData);});setThisMap(map);}useEffect(function(){if(!thisMap){initMap();}if(thisMap){if(thisMap.getLayer(POINT_LAYER)){var filters=[\"any\"];// If ANY of the 3 taxonomies for a company are selected, it should be\n// displayed on the map.\n[1,2,3].forEach(function(i){var filter=[\"in\",\"tax\".concat(i,\"sanitized\")];selectedCategories.forEach(function(category){return filter.push(category);});filters.push(filter);});thisMap.setFilter(POINT_LAYER,filters);}}});useUrlFragment(selectedMapId,function(urlFragment){if(MAPS.hasOwnProperty(urlFragment)){handleSelectMap(urlFragment);}});return/*#__PURE__*/_jsx(ThemeProvider,{theme:THEME,children:/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsxs(\"main\",{className:classes.mainContent,children:[/*#__PURE__*/_jsx(\"div\",{id:\"map-container\",className:classes.mapContainer}),/*#__PURE__*/_jsx(LogoOverlay,{selectedMapId:selectedMapId}),/*#__PURE__*/_jsx(\"div\",{className:classes.resetViewButton,children:/*#__PURE__*/_jsx(IconButton,{variant:\"contained\",color:\"white\",className:classes.resetViewButton,\"aria-label\":\"reset view\",onClick:function onClick(){handleReset();},children:/*#__PURE__*/_jsx(Home,{})})}),/*#__PURE__*/_jsx(\"div\",{className:classes.mapOverlay,children:/*#__PURE__*/_jsxs(\"div\",{className:classes.mapOverlayInner,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.mainControlOverlay,children:[/*#__PURE__*/_jsx(Hidden,{smDown:true,implementation:\"css\",children:/*#__PURE__*/_jsx(\"div\",{className:classes.insightLogoContainer,children:/*#__PURE__*/_jsx(\"img\",{src:insightLogo,alt:\"aes insight logo\",height:\"80\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.titleAndSearch,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.mapTitle,children:/*#__PURE__*/_jsx(Typography,{variant:\"h1\",children:MAPS[selectedMapId].title})}),/*#__PURE__*/_jsx(Omnibox,{companies:companiesGeojson.features,onSelectCompany:handleSelectCompany,onOpenMobileDrawer:function onOpenMobileDrawer(){return setMobileDrawerOpen(true);}})]})]}),/*#__PURE__*/_jsx(LogoOverlay,{selectedMapId:selectedMapId})]})})]})})});}","map":{"version":3,"sources":["/Users/laurenjanicke/aes-sustainability/src/App.js"],"names":["mapboxgl","React","useState","useEffect","ThemeProvider","Hidden","Typography","makeStyles","LogoOverlay","IconButton","Home","Omnibox","getAllCategories","CONFIG","fetchMapData","THEME","insightLogo","COMPANIES_SOURCE","MAPS","POINT_LAYER","accessToken","getPopupContent","props","categoryInfo","map","k","filter","s","join","clearPopups","popUps","document","getElementsByClassName","remove","displayPopup","feature","coordinates","geometry","slice","Popup","setLngLat","setHTML","properties","setMaxWidth","addTo","populateMapData","mapId","mapData","setCenter","center","setZoom","then","data","addSource","type","addLayer","id","source","paint","stops","on","e","getCanvas","style","cursor","features","flyTo","zoom","flyToZoom","speed","getUrlFragment","window","location","hash","replace","useUrlFragment","fragment","callback","handleHashChange","addEventListener","removeEventListener","getInitialMapId","initialMapId","hasOwnProperty","useStyles","theme","root","display","flexDirection","mainContent","flexGrow","position","mapContainer","height","top","right","left","bottom","backgroundColor","mapOverlay","padding","pointerEvents","mapOverlayInner","width","margin","mainControlOverlay","insightLogoContainer","titleAndSearch","mapTitle","color","marginBottom","resetViewButton","minWidth","maxWidth","App","classes","thisMap","setThisMap","selectedMapId","setSelectedMapId","taxonomy","setTaxonomy","companiesGeojson","setCompaniesGeojson","Set","selectedCategories","setSelectedCategories","mobileDrawerOpen","setMobileDrawerOpen","handleSelectAllCategories","txnomy","handleSelectCompany","selectedCompany","idx","handleSelectMap","removeLayer","removeSource","setUpMap","handleReset","initMap","Map","container","attributionControl","minZoom","addControl","FullscreenControl","NavigationControl","getLayer","filters","forEach","i","category","push","setFilter","urlFragment","title"],"mappings":"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","sourcesContent":["import mapboxgl from 'mapbox-gl';\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LogoOverlay from './LogoOverlay';\nimport IconButton from '@material-ui/core/Button';\nimport { Home } from '@material-ui/icons';  \nimport Omnibox from './Omnibox';\nimport { getAllCategories } from './common';\nimport CONFIG from './config.json';\nimport { fetchMapData } from './data-loader';\nimport { THEME } from './Theme';\nimport insightLogo from './img/insight-white.png';\nimport './App.css';\n\nconst COMPANIES_SOURCE = 'companies';\nconst MAPS = CONFIG['maps'];\nconst POINT_LAYER = 'energy-companies-point-layer';\n// testing if desktop change is key to pages rebuilding\n// = process.env.REACT_APP_MAPBOX_API_TOKEN;\n// mapboxgl.accessToken\nmapboxgl.accessToken='pk.eyJ1IjoidG90b3JvLWRha2UiLCJhIjoiY2tiNzJuZmQ3MDFudDJxa2N1ZG91YzBzciJ9.5qJpYzti2W7avnuM9rCiKA'\n\nfunction getPopupContent(props) {\n  const categoryInfo = ['tax1', 'tax2', 'tax3']\n    .map(k => props[k])\n    .filter(s => s).join(\" | \");\n  return `\n    <div class=\"popup\" style = \"color: 626262\">\n      <h3 class=\"company-name\">\n        <a href=${props['website']} style=\"color: 02346d\" target=\"blank\">${props['company']}</a>\n      </h3>\n      \n      City: <span class=\"city-info\">${props['city']}</span><br />\n\n    </div>`;\n}\n\nfunction clearPopups() {\n  var popUps = document.getElementsByClassName('mapboxgl-popup');\n  // Check if there is already a popup on the map and if so, remove it\n  // This prevents multiple popups in the case of overlapping circles\n  if (popUps[0]) popUps[0].remove();\n}\n\nfunction displayPopup(map, feature) {\n  const coordinates = feature.geometry.coordinates.slice();\n  clearPopups();\n  new mapboxgl.Popup({})\n    .setLngLat(coordinates)\n    .setHTML(getPopupContent(feature.properties))\n    .setMaxWidth(\"600px\")\n    .addTo(map);\n}\n\nfunction populateMapData(map, mapId, mapData) {\n  map.setCenter(MAPS[mapId].center);\n  map.setZoom(1);\n\n  mapData.then(data => {\n    map.addSource(COMPANIES_SOURCE, {\n      type: 'geojson',\n      data: data['geojson'],\n    });\n\n    map.addLayer({\n      id: POINT_LAYER,\n      type: 'circle',\n      source: COMPANIES_SOURCE,\n      paint: {\n        // make circles larger as the user zooms\n        'circle-radius': {\n          stops: [[7, 5], [14, 12], [20, 50]]\n        },\n        'circle-opacity': 0.85,\n        // color circles by primary category\n        'circle-color': '#79DDF2',\n        'circle-stroke-color': '#000',\n        'circle-stroke-width': 0.4,\n      }\n    });\n\n    map.on('mouseenter', POINT_LAYER, (e) => {\n      map.getCanvas().style.cursor = 'pointer';\n    });\n\n    map.on('mouseleave', POINT_LAYER, () => {\n      map.getCanvas().style.cursor = '';\n    });\n\n    map.on('click', POINT_LAYER, e => displayPopup(map, e.features[0]));\n\n    map.flyTo({\n      center: MAPS[mapId].flyTo,\n      zoom: MAPS[mapId].flyToZoom || 8,\n      speed: 0.5,\n    });\n  });\n}\n\nconst getUrlFragment = () => window.location.hash.replace('#', '');\n\nfunction useUrlFragment(fragment, callback) {\n  useEffect(() => {\n    window.location.hash = '#' + fragment;\n    const handleHashChange = () => {\n      callback(getUrlFragment());\n    }\n    window.addEventListener('hashchange', handleHashChange);\n    return () => {\n      window.removeEventListener('hashchange', handleHashChange);\n    }\n  });\n}\n\nfunction getInitialMapId() {\n  let initialMapId = getUrlFragment();\n  if (MAPS.hasOwnProperty(initialMapId)) {\n    return initialMapId;\n  }\n  return CONFIG['defaultMapId'];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  mainContent: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  mapContainer: {\n    height: '100vh',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    backgroundColor: '#333',\n  },\n  mapOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    padding: 0,\n    pointerEvents: 'none',\n  },\n  mapOverlayInner: {\n    display: 'block',\n    position: 'relative',\n    height: '100%',\n    width: '100%',\n    margin: 0,\n    padding: 0,\n  },\n  mainControlOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    padding: 0,\n    margin: 0,\n    pointerEvents: 'auto',\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  insightLogoContainer: {\n    padding: 8,\n  },\n  titleAndSearch: {\n    padding: '4px 8px',\n  },\n  mapTitle: {\n    color: '#fff',\n    padding: '4px 0px',\n    marginBottom: 4,\n  },\n  resetViewButton: {\n    position: 'absolute',\n    bottom: 73,\n    right: 4.5,\n    minWidth: 30,\n    maxWidth: 30,\n    height: 31,\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  const [thisMap, setThisMap] = useState(null);\n  const [selectedMapId, setSelectedMapId] = useState(getInitialMapId());\n  const [taxonomy, setTaxonomy] = useState([]);\n  const [companiesGeojson, setCompaniesGeojson] = useState({});\n  const [selectedCategories, setSelectedCategories] = useState(new Set([]));\n  const [mobileDrawerOpen, setMobileDrawerOpen] = useState(false);\n\n  function handleSelectAllCategories(txnomy) {\n    // takes argument instead of using taxonomy directly because taxonomy\n    // state update can lag behind\n    setSelectedCategories(getAllCategories(txnomy));\n  }\n\n  function handleSelectCompany(e) {\n    const selectedCompany = companiesGeojson.features[e.idx];\n    displayPopup(thisMap, selectedCompany);\n    thisMap.flyTo({\n      center: selectedCompany.geometry.coordinates,\n      zoom: 14,\n    });\n  }\n\n  function handleSelectMap(mapId) {\n    if (mapId !== selectedMapId) {\n      clearPopups();\n      thisMap.removeLayer(POINT_LAYER);\n      thisMap.removeSource(COMPANIES_SOURCE);\n      setSelectedMapId(mapId);\n      setMobileDrawerOpen(false);\n      let mapData = fetchMapData(mapId);\n      mapData.then(setUpMap);\n      populateMapData(thisMap, mapId, mapData);\n      handleSelectAllCategories(taxonomy);\n    }\n  }\n\n  function handleReset() {\n    // called when reset button is clicked\n    thisMap.flyTo({\n      center: MAPS[selectedMapId].flyTo,\n      zoom: MAPS[selectedMapId].flyToZoom || 8,\n    });\n  }\n\n  function setUpMap(data) {\n    setTaxonomy(data['taxonomy']);\n    setCompaniesGeojson(data['geojson']);\n    // initially select all categories\n    handleSelectAllCategories(data['taxonomy']);\n  }\n\n  function initMap() {\n    let map = new mapboxgl.Map({\n      container: \"map-container\",\n      style: 'mapbox://styles/mapbox/dark-v10',\n      attributionControl: false,\n      center: MAPS[selectedMapId].center,\n      zoom: 1,\n      minZoom: 1,\n    });\n    let mapData = fetchMapData(selectedMapId);\n    mapData.then(setUpMap);\n\n    map.on('load', () => {\n      map.addControl(new mapboxgl.FullscreenControl(), 'bottom-right');\n      map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n      populateMapData(map, selectedMapId, mapData);\n    });\n    setThisMap(map);\n  }\n\n  useEffect(() => {\n    if (!thisMap) {\n      initMap();\n    }\n\n    if (thisMap) {\n      if (thisMap.getLayer(POINT_LAYER)) {\n        var filters = [\"any\"];\n        // If ANY of the 3 taxonomies for a company are selected, it should be\n        // displayed on the map.\n        [1, 2, 3].forEach(i => {\n          var filter = [\"in\", `tax${i}sanitized`];\n          selectedCategories.forEach(category => filter.push(category));\n          filters.push(filter);\n        });\n        thisMap.setFilter(POINT_LAYER, filters);\n      }\n    }\n  });\n\n  useUrlFragment(selectedMapId, urlFragment => {\n    if (MAPS.hasOwnProperty(urlFragment)) {\n      handleSelectMap(urlFragment);\n    }\n  });\n\n  return (\n    <ThemeProvider theme={THEME}>\n      <div className={classes.root}>\n        <main className={classes.mainContent}>\n          <div id=\"map-container\" className={classes.mapContainer} />\n          <LogoOverlay selectedMapId={selectedMapId} />\n          <div className={classes.resetViewButton} >\n            <IconButton variant=\"contained\" color=\"white\" className={classes.resetViewButton} aria-label=\"reset view\" onClick={() => { handleReset() }} >\n              <Home />\n            </IconButton>\n          </div>\n          <div className={classes.mapOverlay}>\n            <div className={classes.mapOverlayInner}>\n              <div className={classes.mainControlOverlay}>\n                <Hidden smDown implementation=\"css\">\n                  <div className={classes.insightLogoContainer}>\n                    <img src={insightLogo} alt=\"aes insight logo\" height=\"80\" />\n                  </div>\n                </Hidden>\n                <div className={classes.titleAndSearch}>\n                  <div className={classes.mapTitle}>\n                    <Typography variant=\"h1\">{MAPS[selectedMapId].title}</Typography>\n                  </div>\n                  <Omnibox\n                    companies={companiesGeojson.features}\n                    onSelectCompany={handleSelectCompany}\n                    onOpenMobileDrawer={() => setMobileDrawerOpen(true)} />\n                  </div>\n              </div>\n              <LogoOverlay selectedMapId={selectedMapId} />\n            </div>\n          </div>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}